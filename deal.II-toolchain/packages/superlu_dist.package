VERSION=5.1.2
NAME=superlu_dist_${VERSION}
EXTRACTSTO=SuperLU_DIST_${VERSION}
SOURCE=http://crd-legacy.lbl.gov/~xiaoye/SuperLU/
PACKING=.tar.gz
CHECKSUM=0a99bbb5f6c26a9c1d7ab17ea35d4e6f

BUILDCHAIN=cmake
INSTALL_PATH=${INSTALL_PATH}/${NAME}

# check candi environment
if [ -z "${LDSUFFIX}" ]; then
    cecho ${BAD} "Error: (internal): variable LDSUFFIX not set or empty"
	exit 1
fi

if [ -z "${PLATFORM_OSTYPE}" ]; then
    cecho ${BAD} "Error: (internal): variable PLATFORM_OSTYPE not set or empty"
	exit 1
fi

# set up
CONFOPTS=" \
    $CONFOPTS \
    -D TPL_PARMETIS_INCLUDE_DIRS:PATH=${PARMETIS_DIR}/include \
    -D TPL_PARMETIS_LIBRARIES:FILEPATH=${PARMETIS_DIR}/lib/libparmetis.${LDSUFFIX} \
    -D CMAKE_C_FLAGS:STRING=\"-std=c99 -fPIC\" \
    -D BUILD_SHARED_LIBS:BOOL=ON"

package_specific_register () {
    export SUPERLU_DIR=${INSTALL_PATH}

	if [ ${PLATFORM_OSTYPE} == macos ]; then
        export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${INSTALL_PATH}/lib
	fi
}

package_specific_conf () {
    # Generate configuration file
    CONFIG_FILE=${CONFIGURATION_PATH}/${NAME}
    rm -f $CONFIG_FILE
    echo "
export SUPERLU_DIR=${INSTALL_PATH}
" >> $CONFIG_FILE

    if [ ${PLATFORM_OSTYPE} == macos ]; then
	    echo "export DYLD_LIBRARY_PATH=\$DYLD_LIBRARY_PATH:${INSTALL_PATH}/lib
" >> $CONFIG_FILE
	fi
}
