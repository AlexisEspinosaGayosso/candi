# NOTE: uncomment the following line to use the git repository
#       and not a release tarball:
#CANDI_OPENCASCADE_FROM_GIT=1

if [ "${PLATFORM_OSTYPE}" = "macos" ]; then
    # For macOS we currently need to install a patched v0.18
    # from the git repository.
    CANDI_OPENCASCADE_FROM_GIT=1
fi

if [ -n "$CANDI_OPENCASCADE_FROM_GIT" ]; then
    # download git repository (huge download)
    # if possible, try to download a release tarball (see below)
    
    # checkout specific release version
    VERSION=OCE-0.18
    if [ "${PLATFORM_OSTYPE}" = "macos" ]; then
        # v0.18 with fixed t_clock_id bug for macOS
        VERSION=cbfdba8762e0a3787c7669977e8883366cf2b3e5
        EXTRACTSTO=OCE-0.18
    fi
    
    if [ -z ${EXTRACTSTO} ]; then
        EXTRACTSTO=${VERSION}
    fi
    
    # checkout current development version (master)
    #VERSION=master
    if [ "${VERSION}" = "master" ]; then
        EXTRACTSTO=OCE-master
    fi
    
    # set up git repository
    NAME=oce.git
    PACKING=git
    SOURCE=https://github.com/tpaviot/
    
else
    # download release tarball
    
    VERSION=0.17
    CHECKSUM=f1a89395c4b0d199bea3db62b85f818d
    
    NAME=oce-OCE-${VERSION}
    PACKING=.tar.gz
    SOURCE=https://github.com/tjhei/oce/releases/download/OCE-${VERSION}/
    
    EXTRACTSTO=oce-OCE-${VERSION}
fi
unset CANDI_OPENCASCADE_FROM_GIT

BUILDCHAIN=cmake

BUILDDIR=${BUILD_PATH}/${EXTRACTSTO}
INSTALL_PATH=${INSTALL_PATH}/${EXTRACTSTO}

CONFOPTS="-D OCE_INSTALL_PREFIX=${INSTALL_PATH} \
 -D OCE_VISUALISATION=OFF \
 -D OCE_DISABLE_TKSERVICE_FONT=ON \
 -D OCE_DATAEXCHANGE=ON \
 -D OCE_OCAF=OFF \
 -D OCE_DISABLE_X11=ON \
"

package_specific_register () {
    export OPENCASCADE_DIR=${INSTALL_PATH}
}

package_specific_conf () {
    # Generate configuration file
    CONFIG_FILE=${CONFIGURATION_PATH}/${NAME}
    rm -f $CONFIG_FILE
    echo "
export OPENCASCADE_DIR=${INSTALL_PATH}
" >> $CONFIG_FILE
}
